---
title: "Statistical Analysis and Results"
format: 
  docx:
    toc: false
    number-sections: true
    highlight-style: github
    prefer-html: true
bibliography: references.bib
csl: apa.csl
---

```{r} 
#| message: false
#| warning: false
#| echo: false
#| include: false


knitr::opts_chunk$set(echo = TRUE, fig.align="center")
options(knitr.kable.NA = '')

library(tidyverse)
library(kableExtra)
library(ggtext)
library(patchwork)

```

# Statistical Analysis

The present analysis was not pre-registered as we had no a priori hypotheses and thus, given the pilot nature of this study, was considered exploratory. Inferential statistics were treated as highly unstable local descriptions of the relations between model assumptions and data in order to acknowledge the inherent uncertainty in drawing generalised inferences from single and small samples [@amrheinInferentialStatisticsDescriptive2019]. For all analyses we opted to avoid dichotomising the existence of effects and therefore did not employ traditional null hypothesis significance testing on parameter estimates [@amrheinScientistsRiseStatistical2019; @mcshaneAbandonStatisticalSignificance2019]. Instead, we opted to take a model- [@sterbaAlternativeModelBasedDesignBased2009] and estimation-based approach [@cummingNewStatisticsWhy2014]. For all analyses model parameter estimates and their precision, along with conclusions based upon them, were interpreted continuously and probabilistically, considering data quality, plausibility of effect, and previous literature, all within the context of each model. We focused primarily on qualitative examination of our results based on visualization of the data and models for fixed effects, and exploration of variances using random effects and visualising individual participant level model predictions.All analysis was performed in R (version 4.2.2, The R Foundation for Statistical Computing, 2022) and all data and code is presented in the supplementary materials (https://osf.io/kf9r3/).All data visualisations were made using `ggplot2` [@wickhamGgplot2CreateElegant2022] and the `patchwork` package [@pedersenPatchworkComposerPlots2022]. The aim of our analysis was to explore how well the Zelemiq sensor device predicted blood lactate levels as measured from capillary samples by the Biosen C-Line, in addition to the agreement between lactate thresholds detected using either device. Both Zelemiq and blood lactate values were standardised within participants (i.e., clusters) by subtracting the participants mean and dividing by their standard deviation. Thus Zelemiq and blood lactate values were expressed in participants standard deviation units. A rolling mean was also calculated from the standardised Zelemiq raw data using a 10 sample window prior to the corresponding blood lactate values at that time point. 

## Prediction of blood lactate values from Zelemiq values
We firstly explored whether the Zelemiq values were able to predict the corresponding blood lactate values. The dependent variable in our model was therefore the standardised blood lactate levels, and the independent predictor variable was the standardised rolling average of the Zelemiq sensor data. Visual exploration of the data suggested a non-linear relationship between the two and so we opted to fit the Zelemiq values with a second-order polynomial function. A maximal (i.e., with random intercepts and slopes for both linear and quadratic terms) linear mixed effect model was estimated initially using Restricted Maximal Likelihood with the `lme4` package [@batesLme4LinearMixedEffects2023] however this obtained a singular fit and even reduced models did not avoid this (other model checks for this structure are available in the supplementary materials - [https://osf.io/98ey6](https://osf.io/98ey6)). As such we refit the model using a Bayesian approach employing weakly regularising default priors to allow for estimation of the random effects using the `brms` package [@burknerBrmsPackageBayesian2017]. The inclusion of random effects for the quadratic term however resulted in large $\hat{R}$ values suggested chains had not converged and thus we removed this keeping on the linear term as a random slope. With the Zelemiq sensor data as a fixed second-order polynomial effect, and allowing random intercepts and random linear slopes by participant id, the model equation was as follows where $\operatorname{Lactate}^*$ and $\operatorname{Zelemiq}^*$ indicate they are the standardised variables:

$$
\begin{aligned}
  \operatorname{Lactate}^*_{i}  &\sim N \left(\alpha_{j[i]} + \beta_{1j[i]}(\operatorname{Zelemiq}) + \beta_{2}(\operatorname{Zelemiq^2}), \sigma^2 \right) \\    
\left(
  \begin{array}{c} 
    \begin{aligned}
      &\alpha_{j} \\
      &\beta_{1j}
    \end{aligned}
  \end{array}
\right)
  &\sim N \left(
\left(
  \begin{array}{c} 
    \begin{aligned}
      &\mu_{\alpha_{j}} \\
      &\mu_{\beta_{1j}}
    \end{aligned}
  \end{array}
\right)
, 
\left(
  \begin{array}{cc}
     \sigma^2_{\alpha_{j}} & \rho_{\alpha_{j}\beta_{1j}} \\ 
     \rho_{\beta_{1j}\alpha_{j}} & \sigma^2_{\beta_{1j}}
  \end{array}
\right)
 \right)
    \text{, for id j = 1,} \dots \text{,J}
\end{aligned}
$$


```{r} 
#| message: false
#| warning: false
#| echo: false

targets::tar_load(model_comparison_2logBF)

```

All parameters in the model had $\hat{R}$ values $\leq{1.01}$, trace plots demonstrated chain convergence, and the posterior predictive checks appeared appropriate (see [https://osf.io/e782c](https://osf.io/e782c])). Given the novelty of the Zelemiq sensor device we did not have a clear intuition or informed opinion about what priors to set and so opted to use the default weakly regularising priors merely to allow for random effects estimation and "let the data speak". Four Monte Carlo Markov Chains with 4000 warmup and 4000 sampling iterations were used in each model. Model predictions and 95% quantile intervals were visualised for both the global grand mean (i.e., the expectation of the posterior predictive distribution for the parameter ignoring cluster effects) in addition to the conditional effects (i.e., including cluster effects) and the posterior predictions, and also at the individual participant level using the `marginaleffects` package [@arel-bundockMarginaleffectsMarginalEffects2022]. The standarised raw Zelemiq sensor data (i.e., unaveraged) was also visualised alongside the standardised blood lactate data.

## Agreement of lactate thresholds detected using blood lactate values compared to Zelemiq values
We used the `lactater` package [@maturanaLactaterToolsAnalyzing2023] for the detection of blood lactate thresholds. We similarly used the standardised blood lactate and Zelemiq averaged values (i.e., $\operatorname{Lactate}^*$ and $\operatorname{Zelemiq}^*$ from the model described above) and as such did not explore threshold detection methods which relied on log transformations of the lactate response because of negative standardised values. For both blood lactate and Zelemiq values we determined thresholds for watts on the cycle ergometer using the Dmax, Exp-Dmax, ModDmax, and both LTP1 and LTP2 methods [@jamnickManipulatingGradedExercise2018]. We then examined the agreement between the watts at which each threshold was detected between the blood lactate and the Zelemiq values using the Bland-Altman 95% limits of agreement in addition to the concordance correlation coefficient ($\rho_{CCC}$) calculated using the `SimpleAgree` package [@caldwellSimplyAgreeFlexibleRobust2022a]. Frequentist confidence intervals for the bias and  $\rho_{CCC}$ were calculated at the 95% level and for the upper and lower limits of agreement at the 90% level.

# Results
## Prediction of blood lactate values from Zelemiq values

```{r} 
#| message: false
#| warning: false
#| echo: false

targets::tar_load(tidy_model)

tidy_model <- tidy_model[c(4,5,7,8)] %>%
    mutate_if(is.numeric, round, 2)

tidy_model$term <- recode(tidy_model$term,
                        "(Intercept)" = "$Intercept$",
                        "zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
                        "Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{quadratic\\space term}$",
                        "sd__(Intercept)" = "$\\sigma_{Intercept}$",  
                        "sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
                        "cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
                        "sd__Observation" = "$\\sigma_{Residual}$")

```

Model parameters estimates and 95% quantile intervals are shown in @tbl-model and @fig-model panel (A) shows the raw data and model predictions for each individual participant in addition to the participant level in panel (B) and model predictions in panel (C). The $\operatorname{Zelemiq}^*_{linear\space term}$ indicated that  the rate of change in blood lactate at a standardised Zelemiq value of zero was `r tidy_model[2,2]` [95% quantile interval: `r tidy_model[2,3]`, `r tidy_model[2,4]`] and the positive $\operatorname{Zelemiq}^*_{quadratic\space term}$ was `r tidy_model[3,2]` [95% quantile interval: `r tidy_model[3,3]`, `r tidy_model[3,4]`] indicating a convex curve. Thus, blood lactate in standardised units increased exponentially with increasing Zelemiq standardised values. The random effects parameter estimates from the Bayesian model were negligible as expected given the singularity of the Frequentist model fit with Restricted Maximum Likelihood. The majority of variance in the model was attributable to the residual variation. 

```{r} 
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model 
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.


knitr::kable(
  tidy_model,
  align = c("l","c","c","c"),
  col.names = c("Model Term",
                "Estimate",
                "Lower 95\\% QI",
                "Upper 95\\% QI"
                ),
  escape = FALSE, 
  booktabs = TRUE
 
) %>%
  footnote(general = c("QI = quantile interval","Note, estimates are in standard deviation units at the individual participant level.")
           ) %>%
  row_spec(0, bold = TRUE) %>%
  kable_classic(full_width = FALSE) %>%
  pack_rows("Fixed Effects", 1,3) %>%
  pack_rows("Random Effects", 4,7) %>%
  kableExtra::kable_styling()

```

\newpage

\blandscape
```{r}
#| message: false
#| warning: false
#| echo: false
#| label: fig-model 
#| fig-width: 20
#| fig-height: 14
#| fig-cap: Panel (A) shows the standardised values for raw Zelemiq sensor output and Biosen C-Line blood lactate during the course of the incremental test where time has been normalised to 0-100% of the test duration and a locally estimated scatter smooth (LOESS) curve for each has been performed; panel (B) shows the individual participant level predicted values (thick lines) with 95% quantile intervals (ribbons) from the fitted model; panel (C) shows the global grand mean estimate (thick line) from the model with 95% quantile interval (dark grey ribbon) in addition to intervals for the conditional effects including the random effects of participants (lighter grey ribbon) and the posterior predictions (lightest grey ribbon). Individual points in each panel are the individual observed values of data; and panel (D) shows the scatterplots of lactate thresholds detected from either Zelemiq or blood lactate values using Dmax, Exp-Dmax, LTP1, LTP2, and ModDmax.

targets::tar_load(individual_data_plot)
targets::tar_load(individual_preds_plot)
targets::tar_load(model_plot)
targets::tar_load(thresholds_agree_plot)

(((individual_data_plot / individual_preds_plot) | model_plot) / thresholds_agree_plot) +
    plot_annotation(tag_level = "A",
                    tag_prefix = "(", tag_suffix = ")") +
    plot_layout(heights = c(10,4)) &
    theme(axis.title = element_text(size = 13),
          axis.text = element_text(size = 10))
```
\elandscape

```{r} 
#| message: false
#| warning: false
#| echo: false

targets::tar_load(model)

```

## Agreement of lactate thresholds detected using blood lactate values compared to Zelemiq values
```{r} 
#| message: false
#| warning: false
#| echo: false

targets::tar_load(thresholds_agree) 

thresholds_agree <- thresholds_agree |>
    mutate_if(is.numeric, round, 2)

```

Scatterplots of lactate thresholds calculated from either blood lactate or from the Zelemiq values using either Dmax, Exp-Dmax, LTP1, LTP2, or ModDmax can be see in @fig-model panel (D). In comparing the two devices there appeared to be the greatest agreement in threshold detected when using the ModDmax method with a bias of `r thresholds_agree[2,2]` [95% confidence interval:`r thresholds_agree[2,3]`,`r thresholds_agree[2,4]`] Watts and lower and upper 95% limits of agreement of bias of `r thresholds_agree[2,5]` [95% confidence interval:`r thresholds_agree[2,6]`,`r thresholds_agree[2,7]`] and bias of `r thresholds_agree[2,8]` [95% confidence interval:`r thresholds_agree[2,9]`,`r thresholds_agree[2,10]`] Watts respectively. For the ModDmax method the $\rho_{CCC}$`r thresholds_agree[2,11]` [95% confidence interval:`r thresholds_agree[2,12]`,`r thresholds_agree[2,13]`].

# References
