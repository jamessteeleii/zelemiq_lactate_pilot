#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\operatorname{Zelemiq}^*_{linear\\space term}}$",
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
tidy_model
library(kableExtra)
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,3) %>%
pack_rows("Random Effects", 4,7) %>%
kableExtra::kable_styling()
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{quadratic\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,3) %>%
pack_rows("Random Effects", 4,7) %>%
kableExtra::kable_styling()
targets::tar_load(tidy_model)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{quadratic\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "$Intercept$",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{quadratic\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,3) %>%
pack_rows("Random Effects", 4,7) %>%
kableExtra::kable_styling()
tidy_model
targets::tar_load(individual_data_plot)
targets::tar_load(individual_preds_plot)
targets::tar_load(model_plot)
targets::tar_load(thresholds_agree_plot)
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_load(model)
tidy_model
ICC_adj
ICC_adj[1]
View(ICC_adj)
performance::check_singularity(model)
?performance::check_singularity
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data)
performance::check_singularity(model)
tidy_model[1,2]
tidy_model[2,2]
targets::tar_load(thresholds_agree)
thresholds_agree
targets::tar_make()
targets::tar_make()
thresholds_agree <- thresholds_agree |>
mutate_if(is.numeric, round, 2)
View(thresholds_agree)
targets::tar_make()
targets::tar_visnetwork(targets_only = TRUE) %>%
visNetwork::visExport()
targets::tar_visnetwork(targets_only = TRUE) %>%
visNetwork::visExport("visnetwork.html")
library(tidyverse)
targets::tar_visnetwork(targets_only = TRUE) %>%
visNetwork::visExport("visnetwork.html")
visNetwork::visSave(targets::tar_visnetwork(targets_only = TRUE),"visnetwork.html")
# file including path if needed
file <- here("data","Zelemiq Data analysis - JW - all data.xlsx")
# file including path if needed
file <- here::here("data","Zelemiq Data analysis - JW - all data.xlsx")
library(tidyverse)
# file including path if needed
file <- here::here("data","Zelemiq Data analysis - JW - all data.xlsx")
# get the sheets that begin with "P"
sheets <- excel_sheets(file)
# get the sheets that begin with "P"
sheets <- readxl::excel_sheets(file)
sheets <- sheets[grep("P", sheets)]
# read the data, only first columns we need
data <- lapply(sheets, read_excel, path = file, range = cell_cols(c("B","C","E"))) %>%
bind_rows(.id = "id") %>%
rowid_to_column() %>%
janitor::clean_names()
# read the data, only first columns we need
data <- lapply(sheets, readxl::read_excel, path = file, range = cell_cols(c("B","C","E"))) %>%
bind_rows(.id = "id") %>%
rowid_to_column() %>%
janitor::clean_names()
?cell_cols
# read the data, only first columns we need
data <- lapply(sheets, readxl::read_excel, path = file, range = readxl::cell_cols(c("B","C","E"))) %>%
bind_rows(.id = "id") %>%
rowid_to_column() %>%
janitor::clean_names()
View(data)
write.csv("data.csv", data)
write.csv(data, "data.csv")
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_load(thresholds)
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT"))
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT")) |>
ggplot(aes(x = intensity_lactate, y = intensity_zelemiq)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point() +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Bias = {round(bias,2)} [95%CI: {round(bias_lower,2)}, {round(bias_upper,2)}]")),
x = 140,
y = 250,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Lower LOA = {round(lower_loa,2)} [90%CI: {round(lower_loa_lower,2)}, {round(lower_loa_upper,2)}]")),
x = 140,
y = 235,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 140,
y = 220,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2.5,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2.5
) +
facet_grid(.~method_category + method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
targets::tar_load(thresholds_agree)
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT")) |>
ggplot(aes(x = intensity_lactate, y = intensity_zelemiq)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point() +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Bias = {round(bias,2)} [95%CI: {round(bias_lower,2)}, {round(bias_upper,2)}]")),
x = 140,
y = 250,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Lower LOA = {round(lower_loa,2)} [90%CI: {round(lower_loa_lower,2)}, {round(lower_loa_upper,2)}]")),
x = 140,
y = 235,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 140,
y = 220,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2.5,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2.5
) +
facet_grid(.~method_category + method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT")) |>
ggplot(aes(x = intensity_lactate, y = intensity_zelemiq)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point() +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Bias = {round(bias,2)} [95%CI: {round(bias_lower,2)}, {round(bias_upper,2)}]")),
x = 140,
y = 250,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Lower LOA = {round(lower_loa,2)} [90%CI: {round(lower_loa_lower,2)}, {round(lower_loa_upper,2)}]")),
x = 140,
y = 235,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 140,
y = 220,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2.5,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2.5
) +
facet_grid(.~method_category + method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds") +
theme_bw()
View(thresholds)
renv::install("gg4hx")
renv::install("ggh4x")
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT")) |>
ggplot(aes(x = intensity_lactate, y = intensity_zelemiq)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point() +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Bias = {round(bias,2)} [95%CI: {round(bias_lower,2)}, {round(bias_upper,2)}]")),
x = 140,
y = 250,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Lower LOA = {round(lower_loa,2)} [90%CI: {round(lower_loa_lower,2)}, {round(lower_loa_upper,2)}]")),
x = 140,
y = 235,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 140,
y = 220,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2.5,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2.5
) +
facet_nest(.~method_category + method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds") +
theme_bw()
library(ggh4x)
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT")) |>
ggplot(aes(x = intensity_lactate, y = intensity_zelemiq)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point() +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Bias = {round(bias,2)} [95%CI: {round(bias_lower,2)}, {round(bias_upper,2)}]")),
x = 140,
y = 250,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Lower LOA = {round(lower_loa,2)} [90%CI: {round(lower_loa_lower,2)}, {round(lower_loa_upper,2)}]")),
x = 140,
y = 235,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 140,
y = 220,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2.5,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2.5
) +
facet_nest(.~method_category + method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds") +
theme_bw()
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT")) |>
ggplot(aes(x = intensity_lactate, y = intensity_zelemiq)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point() +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Bias = {round(bias,2)} [95%CI: {round(bias_lower,2)}, {round(bias_upper,2)}]")),
x = 140,
y = 250,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Lower LOA = {round(lower_loa,2)} [90%CI: {round(lower_loa_lower,2)}, {round(lower_loa_upper,2)}]")),
x = 140,
y = 235,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 140,
y = 220,
size = 2.5
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2.5,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2.5
) +
facet_nested(.~method_category + method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds") +
theme_bw()
t <-  thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
mutate(method = str_replace(method, "LTP", "LT"))
View(t)
View(thresholds_agree)
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_load(thresholds)
View(thresholds)
targets::tar_load(thresholds_agree)
View(thresholds_agree)
targets::tar_make()
