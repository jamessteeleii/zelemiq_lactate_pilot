x = 135,
y = 235,
size = 2
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 135,
y = 220,
size = 2
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2
) +
facet_grid(.~method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds detected by different methods") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
View(thresholds)
targets::tar_load(thresholds)
thresholds |>
filter(str_detect(method, pattern = "Log", negate = TRUE)) |>
ggplot(aes(x = intensity_lactate, y = intensity_zelemiq)) +
geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
geom_point() +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Bias = {round(bias,2)} [95%CI: {round(bias_lower,2)}, {round(bias_upper,2)}]")),
x = 135,
y = 250,
size = 2
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Lower LOA = {round(lower_loa,2)} [90%CI: {round(lower_loa_lower,2)}, {round(lower_loa_upper,2)}]")),
x = 135,
y = 235,
size = 2
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("Upper LOA = {round(upper_loa,2)} [90%CI: {round(upper_loa_lower,2)}, {round(upper_loa_upper,2)}]")),
x = 135,
y = 220,
size = 2
) +
geom_text(data = thresholds_agree,
aes(label = paste(glue::glue("rho[CCC] == {round(ccc,2)}"))),
x = 235,
y = 125,
size = 2,
parse = TRUE
) +
geom_text(data = thresholds_agree,
aes(label = glue::glue("[95%CI: {round(ccc_lower,2)}, {round(ccc_upper,2)}]")),
x = 235,
y = 110,
size = 2
) +
facet_grid(.~method) +
labs(x = "Threshold determined by blood lactate (Watts)",
y = "Threshold determined by Zelemiq Ltd (Watts)",
title = "Agreement of thresholds detected by different methods") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
targets::tar_make()
targets::tar_make()
targets::tar_make()
14/5
10/2.8
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
# renv::install("tidyverse")
library(tidyverse)
# renv::install("readxl")
library(readxl)
# renv::install("here")
library(here)
# renv::install("janitor")
library(janitor)
# renv::install("zoo")
library(zoo)
normalise <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# file including path if needed
file <- here("data","Zelemiq Data analysis - JW - all data.xlsx")
# read the sheets and only keep the Survey sheets
sheets <- excel_sheets(file)
sheets <- sheets[grep("P", sheets)]
# read the data, only first 10 columns (A:J)
data <- lapply(sheets, read_excel, path = file, range = cell_cols(c("B","C","E"))) %>%
bind_rows(.id = "id") %>%
rowid_to_column() %>%
clean_names() %>%
group_by(id) %>%
mutate(max_lactate = max(lactate, na.rm=TRUE)) %>%
slice(1:max(which(lactate == max_lactate))) %>%
mutate(time_norm = normalise(rowid),
zelemiq_avg = rollmeanr(zelemiq_raw, 10, fill=NA)) %>%
mutate(zelemiq_raw_z = (zelemiq_raw - mean(zelemiq_raw, na.rm=TRUE))/sd(zelemiq_raw, na.rm=TRUE),
zelemiq_avg_z = (zelemiq_avg - mean(zelemiq_avg, na.rm=TRUE))/sd(zelemiq_avg, na.rm=TRUE),
lactate_z = (lactate - mean(lactate, na.rm=TRUE))/sd(lactate, na.rm=TRUE)) |>
ungroup() |>
select(id, time_norm, zelemiq_raw, zelemiq_raw_z, zelemiq_avg, zelemiq_avg_z, lactate, lactate_z)
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z + I(zelemiq_avg_z^2) | id),
data = data,
REML = TRUE,
control = lmerControl(optimizer="Nelder_Mead"))
library(lme4)
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data,
REML = TRUE,
control = lmerControl(optimizer="Nelder_Mead"))
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data,
REML = TRUE,
control = lmerControl(optimizer="Nelder_Mead"))
model <- brm(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data
)
model <- brms::brm(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data
)
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data,
REML = TRUE)
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data)
install.packages("lme4", type = "source")
install_version("Matrix", version = "1.6.2", repos = "http://cran.us.r-project.org")
devtools::install_version("Matrix", version = "1.6.2", repos = "http://cran.us.r-project.org")
install.packages("lme4", type = "source")
# renv::install("tidyverse")
library(tidyverse)
# renv::install("readxl")
library(readxl)
# renv::install("here")
library(here)
# renv::install("janitor")
library(janitor)
# renv::install("zoo")
library(zoo)
normalise <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# file including path if needed
file <- here("data","Zelemiq Data analysis - JW - all data.xlsx")
# read the sheets and only keep the Survey sheets
sheets <- excel_sheets(file)
sheets <- sheets[grep("P", sheets)]
# read the data, only first 10 columns (A:J)
data <- lapply(sheets, read_excel, path = file, range = cell_cols(c("B","C","E"))) %>%
bind_rows(.id = "id") %>%
rowid_to_column() %>%
clean_names() %>%
group_by(id) %>%
mutate(max_lactate = max(lactate, na.rm=TRUE)) %>%
slice(1:max(which(lactate == max_lactate))) %>%
mutate(time_norm = normalise(rowid),
zelemiq_avg = rollmeanr(zelemiq_raw, 10, fill=NA)) %>%
mutate(zelemiq_raw_z = (zelemiq_raw - mean(zelemiq_raw, na.rm=TRUE))/sd(zelemiq_raw, na.rm=TRUE),
zelemiq_avg_z = (zelemiq_avg - mean(zelemiq_avg, na.rm=TRUE))/sd(zelemiq_avg, na.rm=TRUE),
lactate_z = (lactate - mean(lactate, na.rm=TRUE))/sd(lactate, na.rm=TRUE)) |>
ungroup() |>
select(id, time_norm, zelemiq_raw, zelemiq_raw_z, zelemiq_avg, zelemiq_avg_z, lactate, lactate_z)
library(lme4)
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data)
equatiomatic::extract_eq(model)
targets::tar_make()
targets::tar_make()
renv::install("bayesplot")
targets::tar_make()
ICC_adj <- performance::icc(model)
model <- brms::brm(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data
)
ICC_adj <- performance::icc(model)
ICC_adj
R2_adj <- performance::r2_nakagawa(model_adj)
R2_adj <- performance::r2_nakagawa(model)
R2_adj
R2_adj <- performance::r2(model)
R2_adj
ICC_adj <- performance::variance_decomposition(model)
ICC_adj
targets::tar_load(tidy_model)
tidy_model
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
tidy_model
tidy_model[c(2,5),c(3,4,7,8)]
tidy_model[c(4,5,7,8)]
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^* (linear\\space term)$",
"Izelemiq_avg_zE2" = "$\operatorname{Zelemiq}^*(quadratic\\space term)$",
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\operatorname{Zelemiq}^* (linear\\space term)$",
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^* (linear\\space term)$",
"Izelemiq_avg_zE2" = "$\operatorname{Zelemiq}^*(quadratic\\space term)$",
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$Zelemiq*\\space (linear\\space term)$",
"Izelemiq_avg_zE2" = "$Zelemiq*\\space ^*(quadratic\\space term)$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{Zelemiq*\\space  (linear\\space term)}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:Zelemiq*\\space  (linear\\space term)}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$Zelemiq*\\space (linear\\space term)$",
"Izelemiq_avg_zE2" = "$Zelemiq*\\space ^*(quadratic\\space term)$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{Zelemiq*\\space  (linear\\space term)}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:Zelemiq*\\space  (linear\\space term)}$",
"sd__Observation" = "$\\sigma_{Residual}$")
tidy_model
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^* (linear\\space term)$",
"Izelemiq_avg_zE2" = "$Zelemiq*\\space ^*(quadratic\\space term)$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{Zelemiq*\\space  (linear\\space term)}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:Zelemiq*\\space  (linear\\space term)}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\operatorname{Zelemiq}^*_{linear\\space term}}$",
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\operatorname{Zelemiq}^*_{linear\\space term}}$",
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
tidy_model
library(kableExtra)
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,3) %>%
pack_rows("Random Effects", 4,7) %>%
kableExtra::kable_styling()
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{quadratic\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,3) %>%
pack_rows("Random Effects", 4,7) %>%
kableExtra::kable_styling()
targets::tar_load(tidy_model)
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{quadratic\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
targets::tar_load(tidy_model)
tidy_model <- tidy_model[c(4,5,7,8)] %>%
mutate_if(is.numeric, round, 2)
tidy_model$term <- recode(tidy_model$term,
"(Intercept)" = "$Intercept$",
"zelemiq_avg_z" = "$\\operatorname{Zelemiq}^*_{linear\\space term}$",
"Izelemiq_avg_zE2" = "$\\operatorname{Zelemiq}^*_{quadratic\\space term}$",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_z" = "$\\sigma_{\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"cor__(Intercept).zelemiq_avg_z" = "$\\rho_{Intercept:\\operatorname{Zelemiq}^*_{linear\\space term}}$",
"sd__Observation" = "$\\sigma_{Residual}$")
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95\\% CI",
"Upper 95\\% CI"
),
escape = FALSE,
booktabs = TRUE
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,3) %>%
pack_rows("Random Effects", 4,7) %>%
kableExtra::kable_styling()
tidy_model
targets::tar_load(individual_data_plot)
targets::tar_load(individual_preds_plot)
targets::tar_load(model_plot)
targets::tar_load(thresholds_agree_plot)
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_load(model)
tidy_model
ICC_adj
ICC_adj[1]
View(ICC_adj)
performance::check_singularity(model)
?performance::check_singularity
model <- lmer(lactate_z ~ zelemiq_avg_z + I(zelemiq_avg_z^2) + (zelemiq_avg_z | id),
data = data)
performance::check_singularity(model)
tidy_model[1,2]
tidy_model[2,2]
targets::tar_load(thresholds_agree)
thresholds_agree
targets::tar_make()
targets::tar_make()
thresholds_agree <- thresholds_agree |>
mutate_if(is.numeric, round, 2)
View(thresholds_agree)
targets::tar_make()
targets::tar_visnetwork(targets_only = TRUE) %>%
visNetwork::visExport()
targets::tar_visnetwork(targets_only = TRUE) %>%
visNetwork::visExport("visnetwork.html")
library(tidyverse)
targets::tar_visnetwork(targets_only = TRUE) %>%
visNetwork::visExport("visnetwork.html")
visNetwork::visSave(targets::tar_visnetwork(targets_only = TRUE),"visnetwork.html")
# file including path if needed
file <- here("data","Zelemiq Data analysis - JW - all data.xlsx")
# file including path if needed
file <- here::here("data","Zelemiq Data analysis - JW - all data.xlsx")
