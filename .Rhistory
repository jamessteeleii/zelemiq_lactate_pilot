zelemiq_avg_adj = seq(min(data$zelemiq_avg_adj, na.rm = TRUE),
max(data$zelemiq_avg_adj, na.rm = TRUE),
by=0.01))
)
(
ggplot(ind_preds, aes(x = zelemiq_avg_adj, y = estimate)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.25) +
geom_line(size=1) +
geom_point(data=data, aes(y=lactate), alpha=0.25) +
labs(x = "Zelemiq Ltd Output",
y = bquote("Blood Lactate (mmol."~L^-1~")"),
title = "Individual participant level predictions") +
facet_wrap("id", nrow = 2) +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())) +
(
ggplot(model_adj_preds, aes(x = zelemiq_avg_adj, y = estimate)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.25) +
geom_line(size=1) +
geom_point(data=data, aes(y=lactate), alpha=0.25) +
labs(x = "Zelemiq Ltd Output",
y = bquote("Blood Lactate (mmol."~L^-1~")"),
title = "Conditional model_adj predictions") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown()) )
performance::compare_performance(model, model_adj, rank = TRUE)
tab_model(model)
tab_model(model_adj)
model_adj
model
# Adjust at unit level for baseline
data <- data %>%
mutate(zelemiq_avg_gc = first(zelemiq_avg, na_rm = TRUE)) %>%
group_by(id) %>%
mutate(zelemiq_avg_c = first(zelemiq_avg, na_rm = TRUE),
zelemiq_avg_cwc = zelemiq_avg - first(zelemiq_avg, na_rm = TRUE)) %>%
ungroup() %>%
mutate(zelemiq_avg_cgc = zelemiq_avg_c - first(zelemiq_avg_c, na_rm = TRUE)) %>%
model_adj <- lmer(lactate ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
# Adjust at unit level for baseline
data <- data %>%
mutate(zelemiq_avg_gc = first(zelemiq_avg, na_rm = TRUE)) %>%
group_by(id) %>%
mutate(zelemiq_avg_c = first(zelemiq_avg, na_rm = TRUE),
zelemiq_avg_cwc = zelemiq_avg - first(zelemiq_avg, na_rm = TRUE)) %>%
ungroup() %>%
mutate(zelemiq_avg_cgc = zelemiq_avg_c - first(zelemiq_avg_c, na_rm = TRUE))
model_adj <- lmer(lactate ~ zelemiq_avg_cgc + zelemiq_avg_cwc + (zelemiq_avg_cgc + zelemiq_avg_cwc | id),
data = data,
REML = TRUE)
performance::check_model(model_adj)
tab_model(model_adj)
# Adjust at unit level for baseline
data <- data %>%
group_by(id) %>%
mutate(zelemiq_avg_adj = zelemiq_avg - first(zelemiq_avg, na_rm = TRUE))
model_adj <- lmer(lactate ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
performance::check_model(model_adj)
model_adj <- lmer(log(lactate) ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
performance::check_model(model_adj)
model_adj_preds <- predictions(model_adj,
newdata = datagrid(id = NA,
zelemiq_avg_adj = seq(min(data$zelemiq_avg_adj, na.rm = TRUE),
max(data$zelemiq_avg_adj, na.rm = TRUE),
by=0.01)),
re.form = NA,
type = "response")
ggplot(model_adj_preds, aes(x = zelemiq_avg_adj, y = estimate)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.25) +
geom_line(size=1) +
geom_point(data=data, aes(y=lactate), alpha=0.25) +
labs(x = "Zelemiq Ltd Output",
y = bquote("Blood Lactate (mmol."~L^-1~")"),
title = "Conditional model_adj predictions") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
ggplot(model_adj_preds, aes(x = zelemiq_avg_adj, y = estimate)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.25) +
geom_line(size=1) +
# geom_point(data=data, aes(y=lactate), alpha=0.25) +
labs(x = "Zelemiq Ltd Output",
y = bquote("Blood Lactate (mmol."~L^-1~")"),
title = "Conditional model_adj predictions") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
ggplot(model_adj_preds, aes(x = zelemiq_avg_adj, y = estimate)) +
geom_hline(yintercept = 0, linetype = "dashed") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha = 0.25) +
geom_line(size=1) +
geom_point(data=data, aes(y=log(lactate)), alpha=0.25) +
labs(x = "Zelemiq Ltd Output",
y = bquote("Blood Lactate (mmol."~L^-1~")"),
title = "Conditional model_adj predictions") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
renv::install("kableExtra")
performance::test_performance(model, model_adj)
R.version
renv::install("equatiomatic")
renv::install("equatiomatic")
remotes::install_github("datalorax/equatiomatic")
renv::install("remotes")
remotes::install_github("datalorax/equatiomatic")
renv::snapshot()
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
options(knitr.kable.NA = '')
library(tidyverse)
library(kableExtra)
library(patchwork)
equatiomatic::extract_eq(model_adj)
renv::install("texPreview")
renv::install(texPreview)
targets::tar_load(model_checks)
model_checks
performance::test_bf(model, model_adj)
bf_test <- performance::test_bf(model, model_adj)
bf_test$BF
round(bf_test$BF, 3)
round(bf_test$BF[2], 3)
round(bf_test$BF[2], 1)
renv::install("bayestestR")
# renv::install("bayestestR")
library(bayestestR)
bf_test <- bayesfactor_models(model, model_adj)
bf_test
round(bf_test$BF[2], 1)
round(bf_test$log_BF, 1)
2*round(bf_test$log_BF, 1)
tab_model(model_adj)
renv::install("merTools")
library(merTools)
p.sd_1001 <- profile(model,which="theta_",
signames=FALSE)
ran_cor <- as.data.frame(confint(p.sd_1001))
p.sd_3001
ran_cor
p.sd_1001
get_random_eff_conf_ints <- function(model) {
p.sd <- profile(model,which="theta_",
signames=FALSE)
ran_cor <- as.data.frame(confint(p.sd))
}
model
confint(model)
model <- lmer(lactate ~ zelemiq_avg + (zelemiq_avg | id),
data = data,
REML = TRUE)
confint(model)
model
confint(model_adj)
targets::tar_visnetwork()
targets::tar_make()
renv::install("quarto")
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_visnetwork()
targets::tar_visnetwork()
targets::tar_make()
2*round(bf_test$log_BF, 1)
2*round(bf_test$log_BF, 1)[2]
targets::tar_visnetwork()
targets::tar_make()
bf_test <- bayesfactor_models(model, model_adj)
2*round(bf_test$log_BF, 1)[2]
round(bf_test$log_BF, 1)
model_adj <- lmer(lactate ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
model <- lmer(lactate ~ zelemiq_avg + (zelemiq_avg | id),
data = data,
REML = TRUE)
bf_test <- bayesfactor_models(model, model_adj)
2*round(bf_test$log_BF, 1)[2]
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
renv::install("see")
targets::tar_make()
targets::tar_make()
see(model_checks$REQQ)
plot(model_checks$REQQ)
ggplot(model_checks$REQQ)
fortify(model_checks$REQQ)
model_checks$REQQ
fortify(model_checks$PP_CHECK)
ggplot(model_checks$PP_CHECK)
fortify(model_checks$PP_CHECK)
model_checks
targets::tar_make()
fortify(model_checks$NORM)
ggplot(model_checks$NORM)
fortify(model_checks$NORM)
fortify(model_checks$QQ)
plot(fortify(model_checks$QQ))
see:plot(fortify(model_checks$QQ))
see::plot(fortify(model_checks$QQ))
plot(model_checks$QQ))
plot(model_checks$QQ)
performance::plot(model_checks$QQ)
performance::plot(model_checks)
checks <- performance::check_model(model)
plot(checks)
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
renv::install("broom.mixed")
targets::tar_make()
targets::tar_make()
broom.mixed::tidy(model_adj)
broom.mixed::tidy(model_adj, conf.inte=TRUE)
broom.mixed::tidy(model_adj, conf.int=TRUE)
broom.mixed::tidy(model_adj, conf.int=TRUE, conf.method="profile")
targets::tar_make()
targets::tar_make()
targets::tar_visnetwork()
tidy_model <- broom.mixed::tidy(model_adj, conf.int=TRUE, conf.method="profile")
tidy_model
performance::r2_nakagawa(model_adj)
tab_model(model_adj)
targets::tar_load(tidy_model_adj)
tidy_model_brms <- tidy_model_brms[,c(1,3,4,7,8)] %>%
select(-std.error) %>%
mutate(term = str_remove(term,"sd__"))
targets::tar_load(tidy_model_adj)
tidy_model_adj <- tidy_model_adj[,c(1,3,4,7,8)] %>%
select(-std.error) %>%
mutate(term = str_remove(term,"sd__"))
targets::tar_load(tidy_model_adj)
tidy_model_adj <- tidy_model_adj[,c(1,3,4,7,8)] %>%
mutate(term = str_remove(term,"sd__"))
tidy_model_adj[,c(1,3,4,7,8)] %>%
mutate(term = str_remove(term,"sd__"))
tidy_model_adj <- tidy_model_adj[c(1,3,4,7,8),] %>%
mutate(term = str_remove(term,"sd__"))
tidy_model_adj
View(tidy_model_adj)
tab_model(model_adj, show.re.var = FALSE)
tidy_model
as.data.frame(tab_model(model_adj, show.re.var = FALSE))
get_model_data(model_adj)
tab_model(model_adj)
sqrt(0.783)
sqrt(0.61)
sqrt(782.87)
tidy_model_adj <- tidy_model_adj[c(1,2,3,5,4,6),c(1,3,4,7,8)]
tidy_model_adj <- tidy_model[c(1,2,3,5,4,6),c(1,3,4,7,8)]
tidy_model_adj
tidy_model_adj <- tidy_model_adj[c(1,2,3,5,4,6),c(3,4,7,8)]
targets::tar_load(tidy_model_adj)
tidy_model_adj <- tidy_model_adj[c(1,2,3,5,4,6),c(3,4,7,8)]
tidy_model_adj
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd_(Intercept)" = bquote(~sigma_Intercept~),
bquote(~sigma_Intercept~)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd_(Intercept)" = bquote(~sigma[Intercept]),
"sd_zelemiq_avg_adj" = "SD - Baseline Adjusted Zelemiq Output")
recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd_(Intercept)" = bquote(~sigma[Intercept]),
"sd_zelemiq_avg_adj" = "SD - Baseline Adjusted Zelemiq Output")
recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd_(Intercept)" = bquote(~sigma[Intercept],"test"),
"sd_zelemiq_avg_adj" = "SD - Baseline Adjusted Zelemiq Output")
recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd_(Intercept)" = "bquote(~sigma[Intercept]"),
recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd_(Intercept)" = "bquote(~sigma[Intercept])",
"sd_zelemiq_avg_adj" = "SD - Baseline Adjusted Zelemiq Output")
recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd__(Intercept)" = "bquote(~sigma[Intercept])",
"sd__zelemiq_avg_adj" = "SD - Baseline Adjusted Zelemiq Output")
recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Baseline Adjusted Zelemiq Output",
"sd__(Intercept)" = bquote(~sigma[Intercept]),
"sd__zelemiq_avg_adj" = "SD - Baseline Adjusted Zelemiq Output")
tidy_model_adj
tidy_model_adj
targets::tar_load(tidy_model_adj)
tidy_model_adj <- tidy_model_adj[c(1,2,3,5,4,6),c(3,4,7,8)]
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_Intercept$",
"sd__zelemiq_avg_adj" = "$\\sigma_Zelemiq$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_Intercept:Zelemiq$",
"sd__Observation" = "$\\sigma_Residual")
knitr::kable(
all_effs,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_load(tidy_model_adj)
tidy_model_adj <- tidy_model_adj[c(1,2,3,5,4,6),c(3,4,7,8)]
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_Intercept$",
"sd__zelemiq_avg_adj" = "$\\sigma_Zelemiq$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_Intercept:Zelemiq$",
"sd__Observation" = "$\\sigma_Residual")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_load(tidy_model_adj)
tidy_model_adj <- tidy_model_adj[c(1,2,3,5,4,6),c(3,4,7,8)]
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_adj" = "$\\sigma_{Zelemiq}$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_{Intercept:Zelemiq}$",
"sd__Observation" = "$\\sigma_{Residual}")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_load(tidy_model_adj)
tidy_model_adj <- tidy_model_adj[c(1,2,3,5,4,6),c(3,4,7,8)]
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_adj" = "$\\sigma_{Zelemiq}$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_{Intercept:Zelemiq}$",
"sd__Observation" = "$\\sigma_{Residual}$")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
# Adjust at unit level for baseline
data <- data %>%
group_by(id) %>%
mutate(zelemiq_avg_adj = (zelemiq_avg - first(zelemiq_avg, na_rm = TRUE))*100)
model_adj <- lmer(lactate ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
model_adj
targets::tar_load(tidy_model_adj)
tidy_model_adj
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)]
slopes
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)] %>%
mutate_if(is.numeric, ~./100)
slopes
targets::tar_load(tidy_model_adj)
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)] %>%
mutate_if(is.numeric, ~./100)
rest <- tidy_model_adj[c(1,3,4,6),c(3,4,7,8)]
tidy_model_adj <- rbind(slopes, rest)
tidy_model_adj <- tidy_model_adj[c(3,1,4,2,5,6),c(3,4,7,8)]
tidy_model_adj
tidy_model_adj[c(3,1,4,2,5,6),c(3,4,7,8)]
tidy_model_adj <- tidy_model_adj[c(3,1,4,2,5,6),]
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_adj" = "$\\sigma_{Zelemiq}$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_{Intercept:Zelemiq}$",
"sd__Observation" = "$\\sigma_{Residual}$")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_load(tidy_model_adj)
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)] %>%
mutate_if(is.numeric, ~./100)
rest <- tidy_model_adj[c(1,3,4,6),c(3,4,7,8)]
tidy_model_adj <- rbind(slopes, rest)
tidy_model_adj <- tidy_model_adj[c(3,1,4,2,5,6),] %>%
mutate_if(is.numeric, round, 2)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_adj" = "$\\sigma_{Zelemiq}$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_{Intercept:Zelemiq}$",
"sd__Observation" = "$\\sigma_{Residual}$")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
tidy_model_adj
targets::tar_make()
targets::tar_make()
