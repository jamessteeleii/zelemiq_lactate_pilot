"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
# Adjust at unit level for baseline
data <- data %>%
group_by(id) %>%
mutate(zelemiq_avg_adj = (zelemiq_avg - first(zelemiq_avg, na_rm = TRUE))*100)
model_adj <- lmer(lactate ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
model_adj
targets::tar_load(tidy_model_adj)
tidy_model_adj
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)]
slopes
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)] %>%
mutate_if(is.numeric, ~./100)
slopes
targets::tar_load(tidy_model_adj)
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)] %>%
mutate_if(is.numeric, ~./100)
rest <- tidy_model_adj[c(1,3,4,6),c(3,4,7,8)]
tidy_model_adj <- rbind(slopes, rest)
tidy_model_adj <- tidy_model_adj[c(3,1,4,2,5,6),c(3,4,7,8)]
tidy_model_adj
tidy_model_adj[c(3,1,4,2,5,6),c(3,4,7,8)]
tidy_model_adj <- tidy_model_adj[c(3,1,4,2,5,6),]
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_adj" = "$\\sigma_{Zelemiq}$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_{Intercept:Zelemiq}$",
"sd__Observation" = "$\\sigma_{Residual}$")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_load(tidy_model_adj)
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)] %>%
mutate_if(is.numeric, ~./100)
rest <- tidy_model_adj[c(1,3,4,6),c(3,4,7,8)]
tidy_model_adj <- rbind(slopes, rest)
tidy_model_adj <- tidy_model_adj[c(3,1,4,2,5,6),] %>%
mutate_if(is.numeric, round, 2)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_adj" = "$\\sigma_{Zelemiq}$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_{Intercept:Zelemiq}$",
"sd__Observation" = "$\\sigma_{Residual}$")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
tidy_model_adj
targets::tar_make()
targets::tar_make()
renv::status()
renv::snapshot()
targets::tar_make()
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
options(knitr.kable.NA = '')
library(tidyverse)
library(kableExtra)
library(patchwork)
targets::tar_load(tidy_model_adj)
slopes <- tidy_model_adj[c(2,5),c(3,4,7,8)] %>%
mutate_if(is.numeric, ~./100)
rest <- tidy_model_adj[c(1,3,4,6),c(3,4,7,8)]
tidy_model_adj <- rbind(slopes, rest)
tidy_model_adj <- tidy_model_adj[c(3,1,4,2,5,6),] %>%
mutate_if(is.numeric, round, 2)
tidy_model_adj$term <- recode(tidy_model_adj$term,
"(Intercept)" = "Intercept",
"zelemiq_avg_adj" = "Zelemiq",
"sd__(Intercept)" = "$\\sigma_{Intercept}$",
"sd__zelemiq_avg_adj" = "$\\sigma_{Zelemiq}$",
"cor__(Intercept).zelemiq_avg_adj" = "$\\rho_{Intercept:Zelemiq}$",
"sd__Observation" = "$\\sigma_{Residual}$")
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
tidy_model_adj$estimate[1]
targets::tar_make()
targets::tar_make()
renv::install(officer)
renv::install("officer")
renv::install("officedown")
renv::snapshot()
targets::tar_make()
targets::tar_make()
targets::tar_make()
?officer::run_reference()
targets::tar_make()
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
),
format = "markdown"
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
targets::tar_make()
targets::tar_make()
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling(protect_latex =  TRUE)
targets::tar_make()
targets::tar_visnetwork()
tidy_model_adj
library(tidyverse)
library(readxl)
library(here)
library(janitor)
library(zoo)
normalise <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
# file including path if needed
file <- here("data","Zelemiq Data analysis - JW - all data.xlsx")
# read the sheets and only keep the Survey sheets
sheets <- excel_sheets(file)
sheets <- sheets[grep("P", sheets)]
# read the data, only first 10 columns (A:J)
data <- lapply(sheets, read_excel, path = file, range = cell_cols(c("B","C","E"))) %>%
bind_rows(.id = "id") %>%
rowid_to_column() %>%
clean_names() %>%
group_by(id) %>%
mutate(max_lactate = max(lactate, na.rm=TRUE)) %>%
slice(1:max(which(lactate == max_lactate))) %>%
mutate(time_norm = normalise(rowid),
zelemiq_avg = rollmeanr(zelemiq_raw, 10, fill=NA)) %>%
select(time_norm, zelemiq_raw, zelemiq_avg, lactate)
# rescale and plot time series
ylim.prim <- c(0,8)
ylim.sec <- c(0.4,0.6)
b <- diff(ylim.prim)/diff(ylim.sec)
a <- ylim.prim[1] - b*ylim.sec[1]
library(scales)
library(ggtext)
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~\cdot L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~cdot L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~cdot~, ~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol",~cdot~, ~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~cdots~, ~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~cdot L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~cdotL^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
scale_x_continuous("Time (normalised percentage)", labels = percent) +
facet_wrap("id", nrow = 2) +
labs(title = "<span style = 'color: #56B4E9;'>Zelemiq Ltd Ouput</span> and <span style = 'color: #D55E00;'>Blood Lactate from Biosen C-Line</span> during the incremental test",
caption = "Note: Curves are LOESS smooths") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~cdot~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
scale_x_continuous("Time (normalised percentage)", labels = percent) +
facet_wrap("id", nrow = 2) +
labs(title = "<span style = 'color: #56B4E9;'>Zelemiq Ltd Ouput</span> and <span style = 'color: #D55E00;'>Blood Lactate from Biosen C-Line</span> during the incremental test",
caption = "Note: Curves are LOESS smooths") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~cdots~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
scale_x_continuous("Time (normalised percentage)", labels = percent) +
facet_wrap("id", nrow = 2) +
labs(title = "<span style = 'color: #56B4E9;'>Zelemiq Ltd Ouput</span> and <span style = 'color: #D55E00;'>Blood Lactate from Biosen C-Line</span> during the incremental test",
caption = "Note: Curves are LOESS smooths") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~\cdots~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~\cdot~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~%.%~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~%.%L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~\%.%L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol"~%.%~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
ggplot(data, aes(x=time_norm, y=lactate)) +
geom_point(aes(y = a + zelemiq_raw*b), color = "#56B4E9",  alpha = 0.1) + # zelemiq
geom_smooth(aes(y = a + zelemiq_raw*b), color = "#56B4E9", se=FALSE) + # zelemiq
geom_point(color = "#D55E00", alpha = 0.5) + # lactate
geom_smooth(se=FALSE, color = "#D55E00") + # lactate
scale_y_continuous(bquote("Blood Lactate (mmol\U00B7"~L^-1~")"), sec.axis = sec_axis(~ (. - a)/b, name = "Zelemiq Ltd Output (raw)")) +
scale_x_continuous("Time (normalised percentage)", labels = percent) +
facet_wrap("id", nrow = 2) +
labs(title = "<span style = 'color: #56B4E9;'>Zelemiq Ltd Ouput</span> and <span style = 'color: #D55E00;'>Blood Lactate from Biosen C-Line</span> during the incremental test",
caption = "Note: Curves are LOESS smooths") +
theme_bw() +
theme(panel.grid=element_blank(),
plot.title = element_markdown())
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_load(main_adj_plot)
targets::tar_load(main_adj_plot)
#| message: false
#| warning: false
#| echo: false
#| label: fig-model-data-plot
#| fig-cap: Panel (A) shows the raw Zelemiq sensor output and Biosen C-Line blood lactate during the course of the incremental test where time has been normalised to 0-100% of the test duration with a locally estimated scatter smooth (LOESS) curve for each, panel (B) shows the individual participant level predicted values (thick lines) with 95% confidence intervals (ribbons) from the fitted model, and panel (C) shows the conditional model predicted values (thick lines) with 95% confidence intervals (ribbons). Individual points in each panel are the individual observed values of data.
targets::tar_load(individual_data_plot)
targets::tar_load(individual_adj_preds_plot)
targets::tar_load(main_adj_plot)
((individual_data_plot / individual_adj_preds_plot) | model_adj_plot) +
plot_annotation(tag_level = "A",
tag_prefix = "(", tag_suffix = ")")
#| message: false
#| warning: false
#| echo: false
#| label: fig-model-data-plot
#| fig-cap: Panel (A) shows the raw Zelemiq sensor output and Biosen C-Line blood lactate during the course of the incremental test where time has been normalised to 0-100% of the test duration with a locally estimated scatter smooth (LOESS) curve for each, panel (B) shows the individual participant level predicted values (thick lines) with 95% confidence intervals (ribbons) from the fitted model, and panel (C) shows the conditional model predicted values (thick lines) with 95% confidence intervals (ribbons). Individual points in each panel are the individual observed values of data.
targets::tar_load(individual_data_plot)
targets::tar_load(individual_adj_preds_plot)
targets::tar_load(main_adj_plot)
((individual_data_plot / individual_adj_preds_plot) | main_adj_plot) +
plot_annotation(tag_level = "A",
tag_prefix = "(", tag_suffix = ")")
targets::tar_make()
targets::tar_visnetwork()
#| message: false
#| warning: false
#| echo: false
#| label: fig-model-data-plot
#| fig-cap: Panel (A) shows the raw Zelemiq sensor output and Biosen C-Line blood lactate during the course of the incremental test where time has been normalised to 0-100% of the test duration with a locally estimated scatter smooth (LOESS) curve for each, panel (B) shows the individual participant level predicted values (thick lines) with 95% confidence intervals (ribbons) from the fitted model, and panel (C) shows the conditional model predicted values (thick lines) with 95% confidence intervals (ribbons). Individual points in each panel are the individual observed values of data.
targets::tar_load(individual_data_plot)
targets::tar_load(individual_adj_preds_plot)
targets::tar_load(main_adj_plot)
((individual_data_plot / individual_adj_preds_plot) | model_adj_plot) +
plot_annotation(tag_level = "A",
tag_prefix = "(", tag_suffix = ")")
#| message: false
#| warning: false
#| echo: false
#| label: fig-model-data-plot
#| fig-cap: Panel (A) shows the raw Zelemiq sensor output and Biosen C-Line blood lactate during the course of the incremental test where time has been normalised to 0-100% of the test duration with a locally estimated scatter smooth (LOESS) curve for each, panel (B) shows the individual participant level predicted values (thick lines) with 95% confidence intervals (ribbons) from the fitted model, and panel (C) shows the conditional model predicted values (thick lines) with 95% confidence intervals (ribbons). Individual points in each panel are the individual observed values of data.
targets::tar_load(individual_data_plot)
targets::tar_load(individual_adj_preds_plot)
targets::tar_load(model_adj_plot)
((individual_data_plot / individual_adj_preds_plot) | model_adj_plot) +
plot_annotation(tag_level = "A",
tag_prefix = "(", tag_suffix = ")")
targets::tar_make()
#| message: false
#| warning: false
#| echo: false
#| label: fig-model
#| fig-cap: Panel (A) shows the raw Zelemiq sensor output and Biosen C-Line blood lactate during the course of the incremental test where time has been normalised to 0-100% of the test duration with a locally estimated scatter smooth (LOESS) curve for each, panel (B) shows the individual participant level predicted values (thick lines) with 95% confidence intervals (ribbons) from the fitted model, and panel (C) shows the conditional model predicted values (thick lines) with 95% confidence intervals (ribbons). Individual points in each panel are the individual observed values of data.
targets::tar_load(individual_data_plot)
targets::tar_load(individual_adj_preds_plot)
targets::tar_load(model_adj_plot)
((individual_data_plot / individual_adj_preds_plot) | model_adj_plot) +
plot_annotation(tag_level = "A",
tag_prefix = "(", tag_suffix = ")")
targets::tar_make()
targets::tar_make()
#| message: false
#| warning: false
#| echo: false
#| label: tbl-model
#| tbl-cap-location: "top"
#| tbl-cap: Model parameter estimates for both fixed and random effects.
knitr::kable(
tidy_model_adj,
align = c("l","c","c","c"),
col.names = c("Model Term",
"Estimate",
"Lower 95% CI",
"Upper 95% CI"
)
) %>%
footnote(general = c("CI = confidence interval","Slopes for Zelemiq divided by 100 to aid interpretation such that they refer to the change in blood lactate for a 0.01 unit change in the Zelemiq sensor value")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE) %>%
pack_rows("Fixed Effects", 1,2) %>%
pack_rows("Random Effects", 3,6) %>%
kableExtra::kable_styling()
tidy_model_adj
tidy_model_adj
1.35/0.52
0.52/1.35
0.28/0.7
performance::r2_nakagawa(model_adj)
# Adjust at unit level for baseline
data <- data %>%
group_by(id) %>%
mutate(zelemiq_avg_adj = zelemiq_avg - first(zelemiq_avg, na_rm = TRUE))
model_adj <- lmer(lactate ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
library(lme4)
# Adjust at unit level for baseline
data <- data %>%
group_by(id) %>%
mutate(zelemiq_avg_adj = zelemiq_avg - first(zelemiq_avg, na_rm = TRUE))
model_adj <- lmer(lactate ~ zelemiq_avg_adj + (zelemiq_avg_adj | id),
data = data,
REML = TRUE)
performance::r2_nakagawa(model_adj)
# renv::install("sjPlot")
library(sjPlot)
tab_model(model_adj)
performance::icc(model_adj)
ICC_adj <- performance::icc(model_adj)
ICC_adj$ICC_adjusted
ICC_adj$ICC_conditional
ICC_adj$ICC_unadjusted
R2_adj <- performance::r2_nakagawa(model_adj)
R2_adj$R2_marginal
ICC_adj[1]
targets::tar_make()
targets::tar_visnetwork()
targets::tar_make()
